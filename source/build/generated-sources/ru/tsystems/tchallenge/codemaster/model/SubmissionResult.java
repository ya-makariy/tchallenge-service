/*
 * Contest Service API
 * Contest service is a micro service for checking program output with expected answer. 
 *
 * OpenAPI spec version: 0.1.0
 * Contact: api@t-challenge.t-systems.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ru.tsystems.tchallenge.codemaster.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import ru.tsystems.tchallenge.codemaster.model.Language;
import ru.tsystems.tchallenge.codemaster.model.SubmissionStatus;
import ru.tsystems.tchallenge.codemaster.model.TimeList;

/**
 * Result of executing tests
 */
@ApiModel(description = "Result of executing tests")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-12-27T17:05:56.813+03:00")
public class SubmissionResult {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("status")
  private SubmissionStatus status = null;

  @JsonProperty("language")
  private Language language = null;

  @JsonProperty("languageName")
  private String languageName = null;

  @JsonProperty("testNumber")
  private Integer testNumber = null;

  @JsonProperty("cmpErr")
  private String cmpErr = null;

  @JsonProperty("time")
  private TimeList time = null;

  @JsonProperty("sourceCode")
  private String sourceCode = null;

  public SubmissionResult id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of submission
   * @return id
  **/
  @ApiModelProperty(value = "The ID of submission")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SubmissionResult status(SubmissionStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public SubmissionStatus getStatus() {
    return status;
  }

  public void setStatus(SubmissionStatus status) {
    this.status = status;
  }

  public SubmissionResult language(Language language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @ApiModelProperty(value = "")
  public Language getLanguage() {
    return language;
  }

  public void setLanguage(Language language) {
    this.language = language;
  }

  public SubmissionResult languageName(String languageName) {
    this.languageName = languageName;
    return this;
  }

   /**
   * Full name of code language, including version. Returned only if withLang&#x3D;true 
   * @return languageName
  **/
  @ApiModelProperty(value = "Full name of code language, including version. Returned only if withLang=true ")
  public String getLanguageName() {
    return languageName;
  }

  public void setLanguageName(String languageName) {
    this.languageName = languageName;
  }

  public SubmissionResult testNumber(Integer testNumber) {
    this.testNumber = testNumber;
    return this;
  }

   /**
   * Number of test, which is executed now
   * @return testNumber
  **/
  @ApiModelProperty(value = "Number of test, which is executed now")
  public Integer getTestNumber() {
    return testNumber;
  }

  public void setTestNumber(Integer testNumber) {
    this.testNumber = testNumber;
  }

  public SubmissionResult cmpErr(String cmpErr) {
    this.cmpErr = cmpErr;
    return this;
  }

   /**
   * If present, contains compilation error message
   * @return cmpErr
  **/
  @ApiModelProperty(value = "If present, contains compilation error message")
  public String getCmpErr() {
    return cmpErr;
  }

  public void setCmpErr(String cmpErr) {
    this.cmpErr = cmpErr;
  }

  public SubmissionResult time(TimeList time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @ApiModelProperty(value = "")
  public TimeList getTime() {
    return time;
  }

  public void setTime(TimeList time) {
    this.time = time;
  }

  public SubmissionResult sourceCode(String sourceCode) {
    this.sourceCode = sourceCode;
    return this;
  }

   /**
   * Code, which is compiled and run. Returned only if parameter withSource&#x3D;true 
   * @return sourceCode
  **/
  @ApiModelProperty(value = "Code, which is compiled and run. Returned only if parameter withSource=true ")
  public String getSourceCode() {
    return sourceCode;
  }

  public void setSourceCode(String sourceCode) {
    this.sourceCode = sourceCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubmissionResult submissionResult = (SubmissionResult) o;
    return Objects.equals(this.id, submissionResult.id) &&
        Objects.equals(this.status, submissionResult.status) &&
        Objects.equals(this.language, submissionResult.language) &&
        Objects.equals(this.languageName, submissionResult.languageName) &&
        Objects.equals(this.testNumber, submissionResult.testNumber) &&
        Objects.equals(this.cmpErr, submissionResult.cmpErr) &&
        Objects.equals(this.time, submissionResult.time) &&
        Objects.equals(this.sourceCode, submissionResult.sourceCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, language, languageName, testNumber, cmpErr, time, sourceCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubmissionResult {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    languageName: ").append(toIndentedString(languageName)).append("\n");
    sb.append("    testNumber: ").append(toIndentedString(testNumber)).append("\n");
    sb.append("    cmpErr: ").append(toIndentedString(cmpErr)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    sourceCode: ").append(toIndentedString(sourceCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

